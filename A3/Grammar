####GRAMMAR####
Program ::= Stmts

Stmts ::= Stmt
        |Stmt ‘;’ Stmts
Stmt ::= ident ‘=’ Expr
        |Expr

-- Non Left Recursive --
Expr ::= Term ExprOpt 

ExprOpt ::= '==' Term 
          | '!=' Term 
          | '<' Term  
          | '<=' Term 
          | '>' Term  
          | '>=' Term  
          | 'in' Term  
          | 'not' Term -- mangler
          | 'not' 'in' Term -- mangler
          | e 

Term ::= Factor TermOpt

TermOpt ::= '+' Factor TermOpt -- x+y-z virker ikke
          | '-' Factor TermOpt 
          | e

Factor ::= X FactorOpt

FactorOpt ::= '*' X FactorOpt 
               | '//' X FactorOpt 
               | '%' X FactorOpt 
               | e

X ::= numConst -- "-0" virker ikke
    | stringConst -- Virker dårligt
    | ident 
    | '(' E ')'
    | '(' Expr ')'
    | ident '(' Exprz ')' -- Virker nok ikke
    |‘[’ Exprz ‘]’
    |‘[’ Expr ForClause Clausez ‘]’
    | bool

bool ::= 'None'
    | 'True'
    | 'False' 

ForClause ::= ‘for’ ident ‘in’ Expr

IfClause ::= ‘if’ Expr

Clausez ::= e
          | ForClause Clausez
          | IfClause Clausez
Exprz ::= e
        |Exprs
Exprs ::= Expr
        |Expr ‘,’ Exprs

ident ::= (see text)
numConst ::= (see text)
stringConst ::= (see text)